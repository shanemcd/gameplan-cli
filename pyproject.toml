[project]
name = "gameplan"
version = "0.1.0"
description = "Local-first CLI for tracking work across multiple systems with markdown"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "Apache-2.0" }
authors = [
    { name = "Shane McDonald", email = "me@shanemcd.com" }
]
keywords = ["productivity", "tracking", "markdown", "cli", "workflow"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Utilities",
]
dependencies = [
    "pyyaml>=6.0",
    "marko>=2.0.0",
    "pypandoc>=1.13",
    "jirahhh @ git+https://github.com/shanemcd/jirahhh",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
]

[project.scripts]
gameplan = "cli.cli:main"

[project.urls]
Homepage = "https://github.com/shanemcd/gameplan-cli"
Documentation = "https://github.com/shanemcd/gameplan-cli#readme"
Repository = "https://github.com/shanemcd/gameplan-cli"
Issues = "https://github.com/shanemcd/gameplan-cli/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["cli"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--cov=cli",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["cli"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
fail_under = 85

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]
